/*
  For Tailwind CSS v4, if using the CLI or a setup that requires it,
  this is the primary import. If using a framework plugin (e.g., @tailwindcss/vite),
  this might be handled by the plugin, but including it is often safe.
*/
@import "tailwindcss";

/*
  Assuming "tw-animate-css" is a separate CSS library or a Tailwind plugin
  that provides its own CSS. If it's a Tailwind plugin, ensure it's
  compatible with v4 and listed in your tailwind.config.js.
*/
@import "tw-animate-css";

/*
  @custom-variant is a powerful way to define variants in CSS.
  This syntax should work well with v4.
*/
@custom-variant dark (&:is(.dark *));

/*
  The @theme directive is central to Tailwind CSS v4.
  Your usage here is correct for defining theme tokens.
  Tailwind will pick these up.
*/
@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans); /* Ensure --font-geist-sans is defined below or imported */
  --font-mono: var(--font-geist-mono); /* Ensure --font-geist-mono is defined below or imported */
  /* ... all your other --color-* and --radius-* variables ... */
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

/*
  Defining your actual CSS variable values in :root and .dark is perfect.
  Tailwind v4 utilities will inherently respect these.
*/
:root {
  --radius: 0.625rem;
  --background: oklch(1 0 0);
  --foreground: oklch(0.129 0.042 264.695);
  /* ... your light theme variables ... */
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.129 0.042 264.695);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.129 0.042 264.695);
  --primary: oklch(0.208 0.042 265.755);
  --primary-foreground: oklch(0.984 0.003 247.858);
  --secondary: oklch(0.968 0.007 247.896);
  --secondary-foreground: oklch(0.208 0.042 265.755);
  --muted: oklch(0.968 0.007 247.896);
  --muted-foreground: oklch(0.554 0.046 257.417);
  --accent: oklch(0.968 0.007 247.896);
  --accent-foreground: oklch(0.208 0.042 265.755);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.929 0.013 255.508);
  --input: oklch(0.929 0.013 255.508);
  --ring: oklch(0.704 0.04 256.788);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.984 0.003 247.858);
  --sidebar-foreground: oklch(0.129 0.042 264.695);
  --sidebar-primary: oklch(0.208 0.042 265.755);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.968 0.007 247.896);
  --sidebar-accent-foreground: oklch(0.208 0.042 265.755);
  --sidebar-border: oklch(0.929 0.013 255.508);
  --sidebar-ring: oklch(0.704 0.04 256.788);

  /* Scrollbar variables */
  --scrollbar-thumb: oklch(0.8 0.05 260);
  --scrollbar-track: oklch(0.95 0.01 260);
  --scrollbar-glow: 0 0 5px oklch(0.8 0.2 260);

  /* Define font variables if not already globally available via import */
  /* For example, if you're using Geist font files:
  @font-face {
    font-family: 'Geist Sans';
    src: url('/fonts/GeistVariableVF.woff2') format('woff2-variations');
    font-weight: 100 900;
    font-style: normal;
  }
  @font-face {
    font-family: 'Geist Mono';
    src: url('/fonts/GeistMonoVariableVF.woff2') format('woff2-variations');
    font-weight: 100 900;
    font-style: normal;
  }
  --font-geist-sans: 'Geist Sans', sans-serif;
  --font-geist-mono: 'Geist Mono', monospace;
  */
}

.dark {
  --background: oklch(0.129 0.042 264.695);
  --foreground: oklch(0.984 0.003 247.858);
  /* ... your dark theme variables ... */
  --card: oklch(0.208 0.042 265.755);
  --card-foreground: oklch(0.984 0.003 247.858);
  --popover: oklch(0.208 0.042 265.755);
  --popover-foreground: oklch(0.984 0.003 247.858);
  --primary: oklch(0.929 0.013 255.508);
  --primary-foreground: oklch(0.208 0.042 265.755);
  --secondary: oklch(0.279 0.041 260.031);
  --secondary-foreground: oklch(0.984 0.003 247.858);
  --muted: oklch(0.279 0.041 260.031);
  --muted-foreground: oklch(0.704 0.04 256.788);
  --accent: oklch(0.279 0.041 260.031);
  --accent-foreground: oklch(0.984 0.003 247.858);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.551 0.027 264.364);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.208 0.042 265.755);
  --sidebar-foreground: oklch(0.984 0.003 247.858);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.984 0.003 247.858);
  --sidebar-accent: oklch(0.279 0.041 260.031);
  --sidebar-accent-foreground: oklch(0.984 0.003 247.858);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.551 0.027 264.364);

  /* Scrollbar variables for dark theme */
  --scrollbar-thumb: oklch(0.5 0.15 260);
  --scrollbar-track: oklch(0.15 0.02 260);
  --scrollbar-glow: 0 0 10px oklch(0.7 0.3 260);
}

/*
  @layer base is still relevant for base styling.
  The PostCSS plugin for v4 will inject Tailwind's own base styles.
  You can add your custom base styles here.
*/
@layer base {
  * {
    @apply border-border outline-ring/50; /* This will use your themed --border and --ring vars */
    scrollbar-width: thin;
    scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track);
  }

  body {
    @apply bg-background text-foreground; /* Uses themed --background and --foreground */
    font-family: var(--font-sans, system-ui, sans-serif); /* Use the --font-sans from @theme */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  html {
    scroll-behavior: smooth;
  }

  /* Webkit scrollbar styles are standard CSS and fine here */
  ::-webkit-scrollbar { /* ... */ }
  ::-webkit-scrollbar-track { /* ... */ }
  ::-webkit-scrollbar-thumb { /* ... */ }
  ::-webkit-scrollbar-thumb:hover { /* ... */ }

  @keyframes scroll-glow { /* ... */ }
  .scrolling ::-webkit-scrollbar-thumb { /* ... */ }
}

/*
  Your custom keyframes are standard CSS and will work fine.
  They correctly use CSS variables like var(--primary) which will be themed.
*/
@keyframes caret-blink { /* ... */ }
@keyframes gradient-flow { /* ... */ }
/* ... all your other keyframes and animation helper classes ... */
@keyframes subtle-float {
  0%, 100% { transform: translateY(0) rotate(0deg); }
  50% { transform: translateY(-6px) rotate(2deg); }
}

@keyframes icon-glow-pulse {
  0%, 100% {
    transform: scale(1);
    filter: drop-shadow(0 0 4px var(--primary))
            drop-shadow(0 0 8px color-mix(in oklch, var(--primary) 50%, transparent));
  }
  50% {
    transform: scale(1.15);
    filter: drop-shadow(0 0 8px var(--primary))
            drop-shadow(0 0 16px color-mix(in oklch, var(--primary) 50%, transparent));
  }
}

@keyframes aurora-underline {
  0% {
    background-position: -200% center;
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
  100% {
    background-position: 200% center;
    opacity: 0.7;
  }
}

.animate-\\[aurora-underline_3s_ease-out_infinite\\] {
  background-image: linear-gradient(
    to right,
    transparent,
    var(--primary),
    var(--secondary, var(--primary)), /* Fallback for --secondary */
    transparent
  );
  background-size: 200% auto;
  animation: aurora-underline 3s ease-out infinite;
}

@keyframes ripple {
  0% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

@keyframes float { /* Particle float animation */
  0%, 100% { transform: translateY(0) translateX(0); }
  25% { transform: translateY(-20px) translateX(10px); }
  50% { transform: translateY(-10px) translateX(-10px); }
  75% { transform: translateY(-30px) translateX(5px); }
}

.animate-float {
  animation-name: float;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes pulse { /* For dynamic light effect */
  0%, 100% { opacity: 1; }
  50% { opacity: .5; }
}

.animate-\\[pulse_8s_ease-in-out_infinite\\] {
  animation: pulse 8s ease-in-out infinite;
}
.animate-\\[pulse_12s_ease-in-out_infinite_2s\\] {
  animation: pulse 12s ease-in-out 2s infinite;
}